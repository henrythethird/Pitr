{% import "macros/tags.macro.html.twig" as tags %}
{% import "macros/state.macro.html.twig" as state %}
{% set alertTypes = ["success", "warning", "danger", "info"] %}
<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <title>{% block title %}Welcome!{% endblock %}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        {% block stylesheets %}
            <link rel="stylesheet" href="{{ asset('css/bootstrap.min.css') }}" />
            <link rel="stylesheet" href="{{ asset('css/base.css') }}" />
            <link rel="stylesheet" href="{{ asset('css/dropzone.css') }}">
        {% endblock %}

        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
    </head>
    <body>
        <nav class="navbar navbar-default navbar-static-top">
            <div class="row">
                <div class="col-xs-2">
                    <a class="navbar-brand" href="{{ path('homepage') }}">Pitr</a>
                </div>
                <div class="col-xs-10" style="padding-top: 8px;">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            <i class="glyphicon glyphicon-search"></i>
                        </span>
                        <input class="form-control" type="search" oninput="fetchCenter()" id="search_term" placeholder="Enter your serach term" />
                    </div>
                </div>
            </div>
        </nav>
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-2">
                    {{ render(controller("AppBundle:Default:navigation", {
                        folder: folder|default('tags'),
                        tag: tag|default(null)
                    })) }}
                </div>
                <div class="col-xs-10" id="js-center-region">
                    {% for alertType in alertTypes %}
                        {% for message in app.session.flashBag.get(alertType) %}
                            <div class="alert alert-{{ alertType }} alert-dismissible" role="alert">{{ message }}</div>
                        {% endfor %}
                    {% endfor %}

                    {% block body %}{% endblock %}
                </div>
            </div>
        </div>

        <div class="modal fade" id="addDocumentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">Add Document</h4>
                    </div>
                    <div class="modal-body" style="padding: 0">
                        <form id="addDocumentForm" class="dropzone" action="{{ oneup_uploader_endpoint('documents') }}" style="padding: 40px">
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>
        {% block javascripts %}
            <script type="text/javascript" src="{{ asset('js/jquery.min.js') }}"></script>
            <script type="text/javascript" src="{{ asset('js/bootstrap.min.js') }}"></script>
            <script type="text/javascript" src="{{ asset('js/dropzone.js') }}"></script>
            <script type="text/javascript">
                Dropzone.options.addDocumentForm = {
                    dictCancelUpload: true,
                    init: function() {
                        this.on("complete", function(file) {
                            fetchCenter(true);
                        });
                    }
                };
            </script>
            {% if requestURL is defined %}
                <script type="text/javascript">
                    var currentRequest = null;
                    var currentTimeout = null;
                    var url = "{{ requestURL }}";

                    function fetchCenter(skipWait) {
                        var center = $('#js-center-region');
                        var search_bar = $('#search_term');

                        if (currentRequest) {
                            currentRequest.abort();
                        }

                        if (currentTimeout) {
                            clearTimeout(currentTimeout);
                        }

                        currentTimeout = setTimeout(function() {
                            currentRequest = $.get(url, {
                                'search_term': search_bar.val()
                            }, function(data) {
                                center.html(data);
                            });
                        }, !skipWait ? 500 : 0);
                    }
                </script>
            {% endif %}
        {% endblock %}
    </body>
</html>
